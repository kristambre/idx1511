package entity.document;

// Generated May 23, 2015 1:59:28 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DocCatalog generated by hbm2java
 */
@Entity
@Table(name = "doc_catalog", schema = "public")
public class DocCatalog implements java.io.Serializable {

	private BigDecimal docCatalog;
	private BigDecimal catalogOwnerFk;
	private BigDecimal docCatalogTypeFk;
	private String name;
	private String description;
	private BigDecimal level;
	private Date contentUpdated;
	private BigDecimal contentUpdatedBy;
	private BigDecimal upperCatalogFk;
	private String folder;

	public DocCatalog() {
	}

	public DocCatalog(BigDecimal docCatalog) {
		this.docCatalog = docCatalog;
	}

	public DocCatalog(BigDecimal docCatalog, BigDecimal catalogOwnerFk, BigDecimal docCatalogTypeFk, String name, String description, BigDecimal level, Date contentUpdated,
			BigDecimal contentUpdatedBy, BigDecimal upperCatalogFk, String folder) {
		this.docCatalog = docCatalog;
		this.catalogOwnerFk = catalogOwnerFk;
		this.docCatalogTypeFk = docCatalogTypeFk;
		this.name = name;
		this.description = description;
		this.level = level;
		this.contentUpdated = contentUpdated;
		this.contentUpdatedBy = contentUpdatedBy;
		this.upperCatalogFk = upperCatalogFk;
		this.folder = folder;
	}

	@Id
	@Column(name = "doc_catalog", unique = true, nullable = false, precision = 10, scale = 0)
	public BigDecimal getDocCatalog() {
		return this.docCatalog;
	}

	public void setDocCatalog(BigDecimal docCatalog) {
		this.docCatalog = docCatalog;
	}

	@Column(name = "catalog_owner_fk", precision = 10, scale = 0)
	public BigDecimal getCatalogOwnerFk() {
		return this.catalogOwnerFk;
	}

	public void setCatalogOwnerFk(BigDecimal catalogOwnerFk) {
		this.catalogOwnerFk = catalogOwnerFk;
	}

	@Column(name = "doc_catalog_type_fk", precision = 10, scale = 0)
	public BigDecimal getDocCatalogTypeFk() {
		return this.docCatalogTypeFk;
	}

	public void setDocCatalogTypeFk(BigDecimal docCatalogTypeFk) {
		this.docCatalogTypeFk = docCatalogTypeFk;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "level", precision = 10, scale = 0)
	public BigDecimal getLevel() {
		return this.level;
	}

	public void setLevel(BigDecimal level) {
		this.level = level;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "content_updated", length = 29)
	public Date getContentUpdated() {
		return this.contentUpdated;
	}

	public void setContentUpdated(Date contentUpdated) {
		this.contentUpdated = contentUpdated;
	}

	@Column(name = "content_updated_by", precision = 10, scale = 0)
	public BigDecimal getContentUpdatedBy() {
		return this.contentUpdatedBy;
	}

	public void setContentUpdatedBy(BigDecimal contentUpdatedBy) {
		this.contentUpdatedBy = contentUpdatedBy;
	}

	@Column(name = "upper_catalog_fk", precision = 10, scale = 0)
	public BigDecimal getUpperCatalogFk() {
		return this.upperCatalogFk;
	}

	public void setUpperCatalogFk(BigDecimal upperCatalogFk) {
		this.upperCatalogFk = upperCatalogFk;
	}

	@Column(name = "folder")
	public String getFolder() {
		return this.folder;
	}

	public void setFolder(String folder) {
		this.folder = folder;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((catalogOwnerFk == null) ? 0 : catalogOwnerFk.hashCode());
		result = prime * result + ((contentUpdated == null) ? 0 : contentUpdated.hashCode());
		result = prime * result + ((contentUpdatedBy == null) ? 0 : contentUpdatedBy.hashCode());
		result = prime * result + ((description == null) ? 0 : description.hashCode());
		result = prime * result + ((docCatalog == null) ? 0 : docCatalog.hashCode());
		result = prime * result + ((docCatalogTypeFk == null) ? 0 : docCatalogTypeFk.hashCode());
		result = prime * result + ((folder == null) ? 0 : folder.hashCode());
		result = prime * result + ((level == null) ? 0 : level.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((upperCatalogFk == null) ? 0 : upperCatalogFk.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DocCatalog other = (DocCatalog) obj;
		if (catalogOwnerFk == null) {
			if (other.catalogOwnerFk != null)
				return false;
		} else if (!catalogOwnerFk.equals(other.catalogOwnerFk))
			return false;
		if (contentUpdated == null) {
			if (other.contentUpdated != null)
				return false;
		} else if (!contentUpdated.equals(other.contentUpdated))
			return false;
		if (contentUpdatedBy == null) {
			if (other.contentUpdatedBy != null)
				return false;
		} else if (!contentUpdatedBy.equals(other.contentUpdatedBy))
			return false;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (docCatalog == null) {
			if (other.docCatalog != null)
				return false;
		} else if (!docCatalog.equals(other.docCatalog))
			return false;
		if (docCatalogTypeFk == null) {
			if (other.docCatalogTypeFk != null)
				return false;
		} else if (!docCatalogTypeFk.equals(other.docCatalogTypeFk))
			return false;
		if (folder == null) {
			if (other.folder != null)
				return false;
		} else if (!folder.equals(other.folder))
			return false;
		if (level == null) {
			if (other.level != null)
				return false;
		} else if (!level.equals(other.level))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (upperCatalogFk == null) {
			if (other.upperCatalogFk != null)
				return false;
		} else if (!upperCatalogFk.equals(other.upperCatalogFk))
			return false;
		return true;
	}

}
